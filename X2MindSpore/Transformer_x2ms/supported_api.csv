File,Start Line,End Line,Api,Type,Tips
train.py,34,34,torch.nn.Module,SUPPORTED,"The corresponding api of ""torch.nn.Module"" is ""mindspore.nn.Cell"", will be converted to ""nn.Cell"" by x2mindspore."
train.py,39,39,torch.matmul,SUPPORTED,"The corresponding api of ""torch.matmul"" is ""mindspore.nn.MatMul"", will be converted to ""x2ms_adapter.matmul"" by x2mindspore."
train.py,45,45,torch.sum,SUPPORTED,"The corresponding api of ""torch.sum"" is ""mindspore.ops.ReduceSum"", will be converted to ""x2ms_adapter.sum"" by x2mindspore."
train.py,47,47,torch.sum,SUPPORTED,"The corresponding api of ""torch.sum"" is ""mindspore.ops.ReduceSum"", will be converted to ""x2ms_adapter.sum"" by x2mindspore."
train.py,85,85,torch.save,SUPPORTED,"The corresponding api of ""torch.save"" is ""mindspore.save_checkpoint"", will be converted to ""x2ms_adapter.save"" by x2mindspore."
train.py,135,135,torch.zeros,SUPPORTED,"The corresponding api of ""torch.zeros"" is ""mindspore.ops.Zeros"", will be converted to ""x2ms_adapter.zeros"" by x2mindspore."
train.py,136,136,torch.zeros,SUPPORTED,"The corresponding api of ""torch.zeros"" is ""mindspore.ops.Zeros"", will be converted to ""x2ms_adapter.zeros"" by x2mindspore."
train.py,163,163,torch.matmul,SUPPORTED,"The corresponding api of ""torch.matmul"" is ""mindspore.nn.MatMul"", will be converted to ""x2ms_adapter.matmul"" by x2mindspore."
train.py,167,167,torch.sum,SUPPORTED,"The corresponding api of ""torch.sum"" is ""mindspore.ops.ReduceSum"", will be converted to ""x2ms_adapter.sum"" by x2mindspore."
train.py,201,201,torch.utils.tensorboard.SummaryWriter,UNSUPPORTED_ADAPTED,"""torch.utils.tensorboard.SummaryWriter"" has no corresponding api in MindSpore, but will be converted to adapted api ""util_api.SummaryWriter"" by x2mindspore."
train.py,223,223,apex.amp.initialize,UNSUPPORTED_ADAPTED,"""apex.amp.initialize"" has no corresponding api in MindSpore, but will be converted to adapted api ""util_api.amp_initialize"" by x2mindspore."
train.py,234,234,torch.distributed.get_world_size,UNSUPPORTED_ADAPTED,"""torch.distributed.get_world_size"" has no corresponding api in MindSpore, but will be converted to adapted api ""x2ms_adapter.cuda_device_count"" by x2mindspore."
train.py,278,278,torch.nn.utils.clip_grad_norm_,UNSUPPORTED_ADAPTED,"""torch.nn.utils.clip_grad_norm_"" has no corresponding api in MindSpore, but will be converted to adapted api ""util_api.clip_grad_norm"" by x2mindspore."
train.py,278,278,apex.amp.master_params,UNSUPPORTED_ADAPTED,"""apex.amp.master_params"" has no corresponding api in MindSpore, but will be converted to adapted api ""util_api.amp_master_params"" by x2mindspore."
train.py,280,280,torch.nn.utils.clip_grad_norm_,UNSUPPORTED_ADAPTED,"""torch.nn.utils.clip_grad_norm_"" has no corresponding api in MindSpore, but will be converted to adapted api ""util_api.clip_grad_norm"" by x2mindspore."
train.py,384,384,torch.device,UNSUPPORTED_ADAPTED,"""torch.device"" has no corresponding api in MindSpore, but will be converted to adapted api ""x2ms_adapter.Device"" by x2mindspore."
train.py,384,384,torch.cuda.is_available,UNSUPPORTED_ADAPTED,"""torch.cuda.is_available"" has no corresponding api in MindSpore, but will be converted to adapted api ""x2ms_adapter.is_cuda_available"" by x2mindspore."
train.py,385,385,torch.cuda.device_count,SUPPORTED,"The corresponding api of ""torch.cuda.device_count"" is ""mindspore.communication.get_group_size"", will be converted to ""x2ms_adapter.cuda_device_count"" by x2mindspore."
train.py,387,387,torch.cuda.set_device,SUPPORTED,"The corresponding api of ""torch.cuda.set_device"" is ""mindspore.context.set_context"", will be converted to ""x2ms_adapter.cuda_set_device"" by x2mindspore."
train.py,388,388,torch.device,UNSUPPORTED_ADAPTED,"""torch.device"" has no corresponding api in MindSpore, but will be converted to adapted api ""x2ms_adapter.Device"" by x2mindspore."
train.py,389,389,torch.distributed.init_process_group,SUPPORTED,"The corresponding api of ""torch.distributed.init_process_group"" is ""mindspore.communication.init"", will be converted to ""x2ms_adapter.init_process_group"" by x2mindspore."
test.py,69,69,torch.device,UNSUPPORTED_ADAPTED,"""torch.device"" has no corresponding api in MindSpore, but will be converted to adapted api ""x2ms_adapter.Device"" by x2mindspore."
test.py,69,69,torch.cuda.is_available,UNSUPPORTED_ADAPTED,"""torch.cuda.is_available"" has no corresponding api in MindSpore, but will be converted to adapted api ""x2ms_adapter.is_cuda_available"" by x2mindspore."
test.py,70,70,torch.cuda.device_count,SUPPORTED,"The corresponding api of ""torch.cuda.device_count"" is ""mindspore.communication.get_group_size"", will be converted to ""x2ms_adapter.cuda_device_count"" by x2mindspore."
test.py,84,84,torch.load,SUPPORTED,"The corresponding api of ""torch.load"" is ""mindspore.load_checkpoint"", will be converted to ""x2ms_adapter.load"" by x2mindspore."
test.py,95,95,torch.utils.data.DataLoader,UNSUPPORTED_ADAPTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, but will be converted to adapted api ""datasets.data_loader"" by x2mindspore."
utils/dataloader_usa.py,22,22,torchvision.transforms.Compose,SUPPORTED,"The corresponding api of ""torchvision.transforms.Compose"" is ""mindspore.dataset.transforms.c_transforms.Compose"", will be converted to ""transforms.Compose"" by x2mindspore."
utils/dataloader_usa.py,23,23,torchvision.transforms.Resize,SUPPORTED,"The corresponding api of ""torchvision.transforms.Resize"" is ""mindspore.dataset.vision.c_transforms.Resize"", will be converted to ""x2ms_adapter.vision_transforms.Resize"" by x2mindspore."
utils/dataloader_usa.py,24,24,torchvision.transforms.ToTensor,SUPPORTED,"The corresponding api of ""torchvision.transforms.ToTensor"" is ""mindspore.dataset.vision.py_transforms.ToTensor"", will be converted to ""v_transforms.ToTensor"" by x2mindspore."
utils/dataloader_usa.py,25,25,torchvision.transforms.Normalize,SUPPORTED,"The corresponding api of ""torchvision.transforms.Normalize"" is ""mindspore.dataset.vision.c_transforms.Normalize"", will be converted to ""v_transforms.Normalize"" by x2mindspore."
utils/dataloader_usa.py,27,27,torchvision.transforms.Compose,SUPPORTED,"The corresponding api of ""torchvision.transforms.Compose"" is ""mindspore.dataset.transforms.c_transforms.Compose"", will be converted to ""transforms.Compose"" by x2mindspore."
utils/dataloader_usa.py,28,28,torchvision.transforms.Resize,SUPPORTED,"The corresponding api of ""torchvision.transforms.Resize"" is ""mindspore.dataset.vision.c_transforms.Resize"", will be converted to ""x2ms_adapter.vision_transforms.Resize"" by x2mindspore."
utils/dataloader_usa.py,29,29,torchvision.transforms.ToTensor,SUPPORTED,"The corresponding api of ""torchvision.transforms.ToTensor"" is ""mindspore.dataset.vision.py_transforms.ToTensor"", will be converted to ""v_transforms.ToTensor"" by x2mindspore."
utils/dataloader_usa.py,30,30,torchvision.transforms.Normalize,SUPPORTED,"The corresponding api of ""torchvision.transforms.Normalize"" is ""mindspore.dataset.vision.c_transforms.Normalize"", will be converted to ""v_transforms.Normalize"" by x2mindspore."
utils/dataloader_usa.py,81,81,torchvision.transforms.Compose,SUPPORTED,"The corresponding api of ""torchvision.transforms.Compose"" is ""mindspore.dataset.transforms.c_transforms.Compose"", will be converted to ""transforms.Compose"" by x2mindspore."
utils/dataloader_usa.py,82,82,torchvision.transforms.Resize,SUPPORTED,"The corresponding api of ""torchvision.transforms.Resize"" is ""mindspore.dataset.vision.c_transforms.Resize"", will be converted to ""x2ms_adapter.vision_transforms.Resize"" by x2mindspore."
utils/dataloader_usa.py,83,83,torchvision.transforms.ToTensor,SUPPORTED,"The corresponding api of ""torchvision.transforms.ToTensor"" is ""mindspore.dataset.vision.py_transforms.ToTensor"", will be converted to ""v_transforms.ToTensor"" by x2mindspore."
utils/dataloader_usa.py,84,84,torchvision.transforms.Normalize,SUPPORTED,"The corresponding api of ""torchvision.transforms.Normalize"" is ""mindspore.dataset.vision.c_transforms.Normalize"", will be converted to ""v_transforms.Normalize"" by x2mindspore."
utils/dataloader_usa.py,86,86,torchvision.transforms.Compose,SUPPORTED,"The corresponding api of ""torchvision.transforms.Compose"" is ""mindspore.dataset.transforms.c_transforms.Compose"", will be converted to ""transforms.Compose"" by x2mindspore."
utils/dataloader_usa.py,87,87,torchvision.transforms.Resize,SUPPORTED,"The corresponding api of ""torchvision.transforms.Resize"" is ""mindspore.dataset.vision.c_transforms.Resize"", will be converted to ""x2ms_adapter.vision_transforms.Resize"" by x2mindspore."
utils/dataloader_usa.py,88,88,torchvision.transforms.ToTensor,SUPPORTED,"The corresponding api of ""torchvision.transforms.ToTensor"" is ""mindspore.dataset.vision.py_transforms.ToTensor"", will be converted to ""v_transforms.ToTensor"" by x2mindspore."
utils/dataloader_usa.py,89,89,torchvision.transforms.Normalize,SUPPORTED,"The corresponding api of ""torchvision.transforms.Normalize"" is ""mindspore.dataset.vision.c_transforms.Normalize"", will be converted to ""v_transforms.Normalize"" by x2mindspore."
utils/scheduler.py,8,8,torch.optim.lr_scheduler.LambdaLR,UNSUPPORTED_ADAPTED,"""torch.optim.lr_scheduler.LambdaLR"" has no corresponding api in MindSpore, but will be converted to adapted api ""lr_schedule_wrapper.LambdaLR"" by x2mindspore."
utils/scheduler.py,15,15,torch.optim.lr_scheduler.LambdaLR,UNSUPPORTED_ADAPTED,"""torch.optim.lr_scheduler.LambdaLR"" has no corresponding api in MindSpore, but will be converted to adapted api ""lr_schedule_wrapper.LambdaLR"" by x2mindspore."
utils/scheduler.py,30,30,torch.optim.lr_scheduler.LambdaLR,UNSUPPORTED_ADAPTED,"""torch.optim.lr_scheduler.LambdaLR"" has no corresponding api in MindSpore, but will be converted to adapted api ""lr_schedule_wrapper.LambdaLR"" by x2mindspore."
utils/scheduler.py,46,46,torch.optim.lr_scheduler.LambdaLR,UNSUPPORTED_ADAPTED,"""torch.optim.lr_scheduler.LambdaLR"" has no corresponding api in MindSpore, but will be converted to adapted api ""lr_schedule_wrapper.LambdaLR"" by x2mindspore."
utils/dataloader_act.py,11,11,torch.utils.data.DataLoader,UNSUPPORTED_ADAPTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, but will be converted to adapted api ""datasets.data_loader"" by x2mindspore."
utils/dataloader_act.py,86,86,torch.utils.data.DataLoader,UNSUPPORTED_ADAPTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, but will be converted to adapted api ""datasets.data_loader"" by x2mindspore."
utils/data_utils.py,24,24,torch.utils.data.DataLoader,UNSUPPORTED_ADAPTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, but will be converted to adapted api ""datasets.data_loader"" by x2mindspore."
utils/data_utils.py,31,31,torch.utils.data.DataLoader,UNSUPPORTED_ADAPTED,"""torch.utils.data.DataLoader"" has no corresponding api in MindSpore, but will be converted to adapted api ""datasets.data_loader"" by x2mindspore."
models/modeling_resnet.py,18,18,torch.from_numpy,SUPPORTED,"The corresponding api of ""torch.from_numpy"" is ""mindspore.tensor.from_numpy"", will be converted to ""x2ms_adapter.from_numpy"" by x2mindspore."
models/modeling_resnet.py,21,21,torch.nn.Conv2d,SUPPORTED,"The corresponding api of ""torch.nn.Conv2d"" is ""mindspore.nn.Conv2d"", will be converted to ""x2ms_adapter.nn.Conv2d"" by x2mindspore."
models/modeling_resnet.py,27,27,torch.nn.functional.conv2d,SUPPORTED,"The corresponding api of ""torch.nn.functional.conv2d"" is ""mindspore.ops.Conv2D"", will be converted to ""x2ms_adapter.nn_functional.conv2d"" by x2mindspore."
models/modeling_resnet.py,41,41,torch.nn.Module,SUPPORTED,"The corresponding api of ""torch.nn.Module"" is ""mindspore.nn.Cell"", will be converted to ""nn.Cell"" by x2mindspore."
models/modeling_resnet.py,50,50,torch.nn.GroupNorm,SUPPORTED,"The corresponding api of ""torch.nn.GroupNorm"" is ""mindspore.nn.GroupNorm"", will be converted to ""x2ms_adapter.nn.GroupNorm"" by x2mindspore."
models/modeling_resnet.py,52,52,torch.nn.GroupNorm,SUPPORTED,"The corresponding api of ""torch.nn.GroupNorm"" is ""mindspore.nn.GroupNorm"", will be converted to ""x2ms_adapter.nn.GroupNorm"" by x2mindspore."
models/modeling_resnet.py,54,54,torch.nn.GroupNorm,SUPPORTED,"The corresponding api of ""torch.nn.GroupNorm"" is ""mindspore.nn.GroupNorm"", will be converted to ""x2ms_adapter.nn.GroupNorm"" by x2mindspore."
models/modeling_resnet.py,56,56,torch.nn.ReLU,SUPPORTED,"The corresponding api of ""torch.nn.ReLU"" is ""mindspore.nn.ReLU"", will be converted to ""x2ms_adapter.nn.ReLU"" by x2mindspore."
models/modeling_resnet.py,61,61,torch.nn.GroupNorm,SUPPORTED,"The corresponding api of ""torch.nn.GroupNorm"" is ""mindspore.nn.GroupNorm"", will be converted to ""x2ms_adapter.nn.GroupNorm"" by x2mindspore."
models/modeling_resnet.py,115,115,torch.nn.Module,SUPPORTED,"The corresponding api of ""torch.nn.Module"" is ""mindspore.nn.Cell"", will be converted to ""nn.Cell"" by x2mindspore."
models/modeling_resnet.py,125,125,torch.nn.Sequential,SUPPORTED,"The corresponding api of ""torch.nn.Sequential"" is ""mindspore.nn.SequentialCell"", will be converted to ""x2ms_adapter.nn.Sequential"" by x2mindspore."
models/modeling_resnet.py,127,127,torch.nn.GroupNorm,SUPPORTED,"The corresponding api of ""torch.nn.GroupNorm"" is ""mindspore.nn.GroupNorm"", will be converted to ""x2ms_adapter.nn.GroupNorm"" by x2mindspore."
models/modeling_resnet.py,128,128,torch.nn.ReLU,SUPPORTED,"The corresponding api of ""torch.nn.ReLU"" is ""mindspore.nn.ReLU"", will be converted to ""x2ms_adapter.nn.ReLU"" by x2mindspore."
models/modeling_resnet.py,129,129,torch.nn.MaxPool2d,SUPPORTED,"The corresponding api of ""torch.nn.MaxPool2d"" is ""mindspore.nn.MaxPool2d"", will be converted to ""x2ms_adapter.nn.MaxPool2d"" by x2mindspore."
models/modeling_resnet.py,132,132,torch.nn.Sequential,SUPPORTED,"The corresponding api of ""torch.nn.Sequential"" is ""mindspore.nn.SequentialCell"", will be converted to ""x2ms_adapter.nn.Sequential"" by x2mindspore."
models/modeling_resnet.py,133,133,torch.nn.Sequential,SUPPORTED,"The corresponding api of ""torch.nn.Sequential"" is ""mindspore.nn.SequentialCell"", will be converted to ""x2ms_adapter.nn.Sequential"" by x2mindspore."
models/modeling_resnet.py,137,137,torch.nn.Sequential,SUPPORTED,"The corresponding api of ""torch.nn.Sequential"" is ""mindspore.nn.SequentialCell"", will be converted to ""x2ms_adapter.nn.Sequential"" by x2mindspore."
models/modeling_resnet.py,141,141,torch.nn.Sequential,SUPPORTED,"The corresponding api of ""torch.nn.Sequential"" is ""mindspore.nn.SequentialCell"", will be converted to ""x2ms_adapter.nn.Sequential"" by x2mindspore."
models/model_crossattn.py,44,44,torch.from_numpy,SUPPORTED,"The corresponding api of ""torch.from_numpy"" is ""mindspore.tensor.from_numpy"", will be converted to ""x2ms_adapter.from_numpy"" by x2mindspore."
models/model_crossattn.py,48,48,torch.sigmoid,SUPPORTED,"The corresponding api of ""torch.sigmoid"" is ""mindspore.ops.Sigmoid"", will be converted to ""x2ms_adapter.sigmoid"" by x2mindspore."
models/model_crossattn.py,51,51,torch.nn.functional.gelu,UNSUPPORTED_ADAPTED,"""torch.nn.functional.gelu"" has no corresponding api in MindSpore, but will be converted to adapted api ""x2ms_adapter.nn_functional.gelu"" by x2mindspore."
models/model_crossattn.py,51,51,torch.nn.functional.relu,SUPPORTED,"The corresponding api of ""torch.nn.functional.relu"" is ""mindspore.ops.ReLU"", will be converted to ""x2ms_adapter.nn_functional.relu"" by x2mindspore."
models/model_crossattn.py,53,53,torch.nn.Module,SUPPORTED,"The corresponding api of ""torch.nn.Module"" is ""mindspore.nn.Cell"", will be converted to ""nn.Cell"" by x2mindspore."
models/model_crossattn.py,61,61,torch.nn.Linear,SUPPORTED,"The corresponding api of ""torch.nn.Linear"" is ""mindspore.nn.Dense"", will be converted to ""x2ms_adapter.nn.Linear"" by x2mindspore."
models/model_crossattn.py,62,62,torch.nn.Linear,SUPPORTED,"The corresponding api of ""torch.nn.Linear"" is ""mindspore.nn.Dense"", will be converted to ""x2ms_adapter.nn.Linear"" by x2mindspore."
models/model_crossattn.py,63,63,torch.nn.Linear,SUPPORTED,"The corresponding api of ""torch.nn.Linear"" is ""mindspore.nn.Dense"", will be converted to ""x2ms_adapter.nn.Linear"" by x2mindspore."
models/model_crossattn.py,65,65,torch.nn.Linear,SUPPORTED,"The corresponding api of ""torch.nn.Linear"" is ""mindspore.nn.Dense"", will be converted to ""x2ms_adapter.nn.Linear"" by x2mindspore."
models/model_crossattn.py,66,66,torch.nn.Dropout,SUPPORTED,"The corresponding api of ""torch.nn.Dropout"" is ""mindspore.nn.Dropout"", will be converted to ""x2ms_adapter.nn.Dropout"" by x2mindspore."
models/model_crossattn.py,67,67,torch.nn.Dropout,SUPPORTED,"The corresponding api of ""torch.nn.Dropout"" is ""mindspore.nn.Dropout"", will be converted to ""x2ms_adapter.nn.Dropout"" by x2mindspore."
models/model_crossattn.py,69,69,torch.nn.Softmax,SUPPORTED,"The corresponding api of ""torch.nn.Softmax"" is ""mindspore.nn.Softmax"", will be converted to ""x2ms_adapter.nn.Softmax"" by x2mindspore."
models/model_crossattn.py,87,87,torch.matmul,SUPPORTED,"The corresponding api of ""torch.matmul"" is ""mindspore.nn.MatMul"", will be converted to ""x2ms_adapter.matmul"" by x2mindspore."
models/model_crossattn.py,93,93,torch.matmul,SUPPORTED,"The corresponding api of ""torch.matmul"" is ""mindspore.nn.MatMul"", will be converted to ""x2ms_adapter.matmul"" by x2mindspore."
models/model_crossattn.py,103,103,torch.nn.Module,SUPPORTED,"The corresponding api of ""torch.nn.Module"" is ""mindspore.nn.Cell"", will be converted to ""nn.Cell"" by x2mindspore."
models/model_crossattn.py,106,106,torch.nn.Linear,SUPPORTED,"The corresponding api of ""torch.nn.Linear"" is ""mindspore.nn.Dense"", will be converted to ""x2ms_adapter.nn.Linear"" by x2mindspore."
models/model_crossattn.py,107,107,torch.nn.Linear,SUPPORTED,"The corresponding api of ""torch.nn.Linear"" is ""mindspore.nn.Dense"", will be converted to ""x2ms_adapter.nn.Linear"" by x2mindspore."
models/model_crossattn.py,109,109,torch.nn.Dropout,SUPPORTED,"The corresponding api of ""torch.nn.Dropout"" is ""mindspore.nn.Dropout"", will be converted to ""x2ms_adapter.nn.Dropout"" by x2mindspore."
models/model_crossattn.py,114,114,torch.nn.init.xavier_uniform_,SUPPORTED,"The corresponding api of ""torch.nn.init.xavier_uniform_"" is ""mindspore.common.initializer.XavierUniform"", will be converted to ""x2ms_adapter.nn_init.xavier_uniform_"" by x2mindspore."
models/model_crossattn.py,115,115,torch.nn.init.xavier_uniform_,SUPPORTED,"The corresponding api of ""torch.nn.init.xavier_uniform_"" is ""mindspore.common.initializer.XavierUniform"", will be converted to ""x2ms_adapter.nn_init.xavier_uniform_"" by x2mindspore."
models/model_crossattn.py,116,116,torch.nn.init.normal_,SUPPORTED,"The corresponding api of ""torch.nn.init.normal_"" is ""mindspore.common.initializer.Normal"", will be converted to ""x2ms_adapter.nn_init.normal_"" by x2mindspore."
models/model_crossattn.py,117,117,torch.nn.init.normal_,SUPPORTED,"The corresponding api of ""torch.nn.init.normal_"" is ""mindspore.common.initializer.Normal"", will be converted to ""x2ms_adapter.nn_init.normal_"" by x2mindspore."
models/model_crossattn.py,128,128,torch.nn.Module,SUPPORTED,"The corresponding api of ""torch.nn.Module"" is ""mindspore.nn.Cell"", will be converted to ""nn.Cell"" by x2mindspore."
models/model_crossattn.py,143,143,torch.nn.modules.utils._pair,UNSUPPORTED_ADAPTED,"""torch.nn.modules.utils._pair"" has no corresponding api in MindSpore, but will be converted to adapted api ""util_api.pair"" by x2mindspore."
models/model_crossattn.py,152,152,torch.nn.Conv2d,SUPPORTED,"The corresponding api of ""torch.nn.Conv2d"" is ""mindspore.nn.Conv2d"", will be converted to ""x2ms_adapter.nn.Conv2d"" by x2mindspore."
models/model_crossattn.py,156,156,torch.nn.Parameter,SUPPORTED,"The corresponding api of ""torch.nn.Parameter"" is ""mindspore.Parameter"", will be converted to ""mindspore.Parameter"" by x2mindspore."
models/model_crossattn.py,156,156,torch.zeros,SUPPORTED,"The corresponding api of ""torch.zeros"" is ""mindspore.ops.Zeros"", will be converted to ""x2ms_adapter.zeros"" by x2mindspore."
models/model_crossattn.py,157,157,torch.nn.Parameter,SUPPORTED,"The corresponding api of ""torch.nn.Parameter"" is ""mindspore.Parameter"", will be converted to ""mindspore.Parameter"" by x2mindspore."
models/model_crossattn.py,157,157,torch.zeros,SUPPORTED,"The corresponding api of ""torch.zeros"" is ""mindspore.ops.Zeros"", will be converted to ""x2ms_adapter.zeros"" by x2mindspore."
models/model_crossattn.py,159,159,torch.nn.Dropout,SUPPORTED,"The corresponding api of ""torch.nn.Dropout"" is ""mindspore.nn.Dropout"", will be converted to ""x2ms_adapter.nn.Dropout"" by x2mindspore."
models/model_crossattn.py,172,172,torch.cat,SUPPORTED,"The corresponding api of ""torch.cat"" is ""mindspore.ops.Concat"", will be converted to ""x2ms_adapter.cat"" by x2mindspore."
models/model_crossattn.py,180,180,torch.nn.Module,SUPPORTED,"The corresponding api of ""torch.nn.Module"" is ""mindspore.nn.Cell"", will be converted to ""nn.Cell"" by x2mindspore."
models/model_crossattn.py,184,184,torch.nn.LayerNorm,SUPPORTED,"The corresponding api of ""torch.nn.LayerNorm"" is ""mindspore.nn.LayerNorm"", will be converted to ""x2ms_adapter.nn.LayerNorm"" by x2mindspore."
models/model_crossattn.py,185,185,torch.nn.LayerNorm,SUPPORTED,"The corresponding api of ""torch.nn.LayerNorm"" is ""mindspore.nn.LayerNorm"", will be converted to ""x2ms_adapter.nn.LayerNorm"" by x2mindspore."
models/model_crossattn.py,186,186,torch.nn.LayerNorm,SUPPORTED,"The corresponding api of ""torch.nn.LayerNorm"" is ""mindspore.nn.LayerNorm"", will be converted to ""x2ms_adapter.nn.LayerNorm"" by x2mindspore."
models/model_crossattn.py,245,245,torch.nn.Module,SUPPORTED,"The corresponding api of ""torch.nn.Module"" is ""mindspore.nn.Cell"", will be converted to ""nn.Cell"" by x2mindspore."
models/model_crossattn.py,249,249,torch.nn.ModuleList,SUPPORTED,"The corresponding api of ""torch.nn.ModuleList"" is ""mindspore.nn.CellList"", will be converted to ""x2ms_adapter.nn.ModuleList"" by x2mindspore."
models/model_crossattn.py,250,250,torch.nn.LayerNorm,SUPPORTED,"The corresponding api of ""torch.nn.LayerNorm"" is ""mindspore.nn.LayerNorm"", will be converted to ""x2ms_adapter.nn.LayerNorm"" by x2mindspore."
models/model_crossattn.py,268,268,torch.nn.Module,SUPPORTED,"The corresponding api of ""torch.nn.Module"" is ""mindspore.nn.Cell"", will be converted to ""nn.Cell"" by x2mindspore."
models/model_crossattn.py,280,280,torch.nn.Module,SUPPORTED,"The corresponding api of ""torch.nn.Module"" is ""mindspore.nn.Cell"", will be converted to ""nn.Cell"" by x2mindspore."
